#!/usr/bin/env python
PACKAGE = "cluster_tracker"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("bin_size_x", double_t, 0, "Bin size of the particle", 0.1, 0.0, 1.0)
gen.add("bin_size_y", double_t, 0, "Bin size of the particle", 0.1, 0.0, 1.0)
gen.add("bin_size_z", double_t, 0, "Bin size of the particle", 0.1, 0.0, 1.0)
gen.add("bin_size_roll", double_t, 0, "Bin size of the particle", 0.1, 0.0, 1.0)
gen.add("bin_size_pitch", double_t, 0, "Bin size of the particle", 0.1, 0.0, 1.0)
gen.add("bin_size_yaw", double_t, 0, "Bin size of the particle", 0.1, 0.0, 1.0)

gen.add("downsample_grid_size", double_t, 0, "Grid size of downsampling", 0.02, 0.0, 1.0)
gen.add("maximum_particle_num", int_t, 0, "Number of maximum particles", 100, 0, 1000)
gen.add("inetration_num", int_t, 0, "Number of iteration in paritcle filter", 1, 0, 10)
gen.add("step_covariance_xyz", double_t, 0, "Step covariance of XYZ", 0.015, 0.0, 10)
gen.add("step_covariance_rpy", double_t, 0, "Step covariance of XYZ", 40, 0.0, 50)
gen.add("resampling_likelihood_threashold", double_t, 0, "Threashold of resampling in likelihood", 40, 0.0, 50)

gen.add("pointcloud_distance_threashold", double_t, 0, "Pointcloud distance threashold between two point cloud", 0.3, 0.0, 1.0)

gen.add("matching_cost_threashold", double_t, 0, "Matching cost threashold in tracker assignment", 0.99, 0.0, 1.0)

exit(gen.generate(PACKAGE, "cluster_tracker", "ClusterTracker"))